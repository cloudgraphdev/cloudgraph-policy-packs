---
.configure-registry: &configure-registry
  - apk --quiet --no-progress --update --no-cache add git openssh
#  Production settings to deploy to NPM instead of Gitlab
#
#  [1] Edit .yarnrc.yml as noted at the top of that file
#  [2] Update the pipeline configuration:
#    - Uncomment the line below (line 10) to set the NPM_TOKEN
#    - Remove the line below that (line 11) to remove the GITLAB_TOKEN references
#    - Uncomment lines 99 - 117 to enable Slack notifications of package publishing
#    - Remove this comment
#  - sed -i "s/\$NPM_TOKEN/$NPM_TOKEN/g" .yarnrc.yml
  - sed -i "s/\$GITLAB_TOKEN/$GITLAB_TOKEN/g" .yarnrc.yml

  - NODE_ENV=cicd yarn install
default:
  image: node:16-alpine
  before_script:
    - *configure-registry
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - "**/dist/"
    policy: pull-push

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'

variables:
  NPM_TOKEN: ${NPM_TOKEN}
  GITLAB_TOKEN: ${GITLAB_TOKEN}

stages:
  - test
  - release
  - publish
  - notify

lint:
  image: node:16-alpine
  stage: test
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^chore\(publish\)/
      when: never
    - if: $CI_COMMIT_BRANCH
      when: always
  script:
    - yarn workspaces foreach run lint

test:
  image: node:16-alpine
  stage: test
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^chore\(publish\)/
      when: never
    - when: always
  script:
    - yarn workspaces foreach run test

release:
  image: node:16-alpine
  stage: release
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /^chore\(publish\)/
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_COMMIT_BRANCH == "alpha"
      when: always
    - if: $CI_COMMIT_BRANCH == "beta"
      when: always
  variables:
    # Set git commit identity
    GIT_AUTHOR_NAME: 'AutoCloud Deploy Bot'
    GIT_AUTHOR_EMAIL: 'no-reply@loudcloud.dev'
    GIT_COMMITTER_NAME: 'AutoCloud Deploy Bot'
    GIT_COMMITTER_EMAIL: 'no-reply@loudcloud.dev'
    # Disable Husky for the git step of semantic release (handles all versions, env var name changed in v6)
    HUSKY_SKIP_HOOKS: 1
    HUSKY: 0
  before_script:
    - *configure-registry
  script:
    - yarn release

publish:
  image: node:16-alpine
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - if: $CI_COMMIT_BRANCH
      when: never
  script:
    - export NPM_TAG=`./.cicd/release_tag.js $CI_COMMIT_TAG`
    - export WORKSPACE_NAME=`./.cicd/workspace_name.js $CI_COMMIT_TAG`
    - yarn workspace $WORKSPACE_NAME publish --tag $NPM_TAG

# .curlcmd: &curlcmd >
#   curl
#   -sS
#   -X POST
#   --data-urlencode "payload={\"attachments\":[{\"fallback\":\"$GITLAB_USER_NAME released new $CI_PROJECT_TITLE version $CI_COMMIT_TAG\",\"color\":\"good\",\"author_name\":\"$GITLAB_USER_NAME ($GITLAB_USER_LOGIN)\",\"author_icon\":\"$GITLAB_USER_AVATAR\",\"author_link\":\"https://gitlab.com/$GITLAB_USER_LOGIN\",\"title\":\"Version $CI_COMMIT_TAG of $CI_PROJECT_NAME released\",\"title_link\":\"$CI_PROJECT_URL/-/tags/$CI_COMMIT_TAG\",\"fields\":[{\"title\":\"Tag\",\"value\":\"<$CI_PROJECT_URL/commits/$CI_COMMIT_TAG|$CI_COMMIT_TAG>\",\"short\":true},{\"title\":\"Commit\",\"value\":\"<$CI_PROJECT_URL/tree/$CI_COMMIT_SHA|$CI_COMMIT_TITLE>\",\"short\":true}],\"footer\":\"$CI_PROJECT_NAME\",\"ts\":$( date +%s )}]}"
#   $SLACK_API_ENDPOINT

# notify:
#   image: alpine:latest
#   stage: notify
#   rules:
#     - if: $CI_COMMIT_TAG
#   # Overwrite the default before script with a no-op action to disable the node specific actions
#   before_script:
#     - echo "noop"
#   script:
#     - apk add --no-cache curl
#     - GITLAB_USER_AVATAR=$( echo $GITLAB_USER_EMAIL | tr '[:upper:]' '[:lower:]' | tr -d '[:space:]' | md5sum | awk -F' ' '{print $1}' | xargs -I{} echo 'https://www.gravatar.com/avatar/{}?s=80&d=identicon' )
#     - *curlcmd
